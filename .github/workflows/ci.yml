name: Test if the action works as intended

on:
  push:
    branches:
    - main
  pull_request:
    types:
    - opened
    - synchronize
    - reopened

env:
  CHECKOUT_PATH: target
  ASSERT_EQUALS: ${{ github.workspace }}/scripts/assert_equals

jobs:
  all-published:
    name: Should return an empty JSON list when all tags are published
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repository
      uses: actions/checkout@v3
    - name: Checkout target repository
      uses: actions/checkout@v3
      with:
        repository: restic/restic
        path: ${{ env.CHECKOUT_PATH }}
        fetch-depth: 0
    - name: Get unpublished tags
      id: tags
      uses: ./
      with:
        dockerhub-repository: restic/restic
        checkout-path: ${{ env.CHECKOUT_PATH }}
    - name: Check unpublished list
      env:
        UNPUBLISHED: ${{ steps.tags.outputs.unpublished }}
      run: |
        $ASSERT_EQUALS '[]' $(echo "$UNPUBLISHED")
    - name: Check published list
      env:
        PUBLISHED: ${{ steps.tags.outputs.published }}
      working-directory: ${{ env.CHECKOUT_PATH }}
      run: |
        $ASSERT_EQUALS \
          $(git tag --merged refs/heads/master --sort=creatordate | jq -n -R -c '[inputs]') \
          $(echo "$PUBLISHED" | jq -n -c inputs)
  none-published:
    name: Should return a JSON list with all tags when no tags are published
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repository
      uses: actions/checkout@v3
    - name: Checkout target repository
      uses: actions/checkout@v3
      with:
        repository: restic/restic
        path: ${{ env.CHECKOUT_PATH }}
        fetch-depth: 0
    - name: Get tags
      id: tags
      uses: ./
      with:
        dockerhub-repository: this-account-should-not-exist/restic
        checkout-path: ${{ env.CHECKOUT_PATH }}
    - name: Check unpublished
      env:
        UNPUBLISHED: ${{ steps.tags.outputs.unpublished }}
      working-directory: ${{ env.CHECKOUT_PATH }}
      run: |
        $ASSERT_EQUALS \
          $(git tag --merged refs/heads/master --sort=creatordate | jq -n -R -c '[inputs]') \
          $(echo "$UNPUBLISHED" | jq -n -c inputs)
    - name: Check published
      env:
        PUBLISHED: ${{ steps.tags.outputs.published }}
      run: |
        $ASSERT_EQUALS '[]' $(echo "$PUBLISHED")
  has-first-tag:
    name: Should skip older tags when when first tag input is provided
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repository
      uses: actions/checkout@v3
    - name: Checkout target repository
      uses: actions/checkout@v3
      with:
        repository: restic/restic
        path: ${{ env.CHECKOUT_PATH }}
        fetch-depth: 0
    - name: Get tags
      id: tags
      uses: ./
      with:
        dockerhub-repository: this-account-should-not-exist/restic
        checkout-path: ${{ env.CHECKOUT_PATH }}
        first-tag: v0.3.0
    - name: Check unpublisehd
      env:
        UNPUBLISHED: ${{ steps.tags.outputs.unpublished }}
      working-directory: ${{ env.CHECKOUT_PATH }}
      run: |
        $ASSERT_EQUALS \
          $(git tag --merged refs/heads/master --sort=creatordate | jq -n -R -c '[inputs] | map(select(. != "v0.1.0" && . != "v0.2.0"))') \
          $(echo "$UNPUBLISHED" | jq -n -c inputs)
    - name: Check publisehd
      env:
        PUBLISHED: ${{ steps.tags.outputs.published }}
      working-directory: ${{ env.CHECKOUT_PATH }}
      run: |
        $ASSERT_EQUALS \
          $(echo '["v0.1.0", "v0.2.0"]') \
          $(echo "$PUBLISHED" | jq -n -c inputs)
